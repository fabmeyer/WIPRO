//
// Execute with -PtargetEnv=PROD to build a RELEASE artifact.
// Otherwise a SNAPSHOT artifact will be generated.
//

// For debugging:
// '-agentlib:jdwp=transport=dt_socket,address=9009,server=y,suspend=y'

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'war'
    id 'application'
}

group = "ch.hslu.wipro.qc"
version = (hasProperty('targetEnv') && targetEnv == 'PROD') ? '1.2.1' : '1.2.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

configurations {
    // inflection
    derbyNet
}

dependencies {
    def tomcatVersion = '8.5.30'
    compile "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
           //"org.apache.tomcat.embed:tomcat-embed-el:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}",
           "org.apache.tomcat:tomcat-jasper:${tomcatVersion}",
           "org.apache.tomcat:tomcat-jasper-el:${tomcatVersion}",
           "org.apache.tomcat:tomcat-jsp-api:${tomcatVersion}",
           "org.eclipse.jdt.core.compiler:ecj:4.6.1",
           "javax.servlet:javax.servlet-api:3.1.0",
           "org.apache.tomcat:tomcat-dbcp:${tomcatVersion}"
    compile( 'org.apache.tomcat.embed:tomcat-embed-el:8.5.16' ) { transitive = false }
    // ATTENTION: any changes here should be duplicated in the list
    // of runtime dependencies below!
    //compile( 'org.eclipse.jetty:jetty-server:9.3.0.M2' ) { transitive = false }
    //compile( '__org.eclipse.jetty:jetty-server-deflected:9.3.0.M2' ) { transitive = false }
    //compile( 'org.eclipse.jetty:jetty-util:9.3.0.M2' ) { transitive = false }
    //compile( '__org.eclipse.jetty:jetty-util-deflected:9.3.0.M2' ) { transitive = false }
    //compile( 'org.eclipse.jetty:jetty-servlet:9.3.0.M2' ) { transitive = false }
    compile( 'javax.servlet:javax.servlet-api:3.1.0' ) { transitive = false }
    //compile( '__javax.servlet:javax.servlet-api-deflected:3.1.0' ) { transitive = false }
    compile( 'org.glassfish.jersey.core:jersey-server:2.17' ) { transitive = false }
    compile( 'org.glassfish.jersey.media:jersey-media-json-jackson:2.17' )
    compile( 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.17' ) { transitive = false }
    compile( 'com.fasterxml.jackson.core:jackson-databind:2.3.2' ) { transitive = false }
    compile( 'com.fasterxml.jackson.core:jackson-core:2.3.2' ) { transitive = false }
    //compile( 'org.apache.derby:derbynet:10.11.1.1' ) { transitive = false }
    //compile( '__org.apache.derby:derbynet-deflected:10.11.1.1' ) { transitive = false }
    compile( 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final' ) { transitive = false }
    compile( 'net.sf.dozer:dozer:5.5.1' ) { transitive = false }
    compile( 'org.slf4j:slf4j-api:1.7.12' ) { transitive = false }
    compile( 'org.reflections:reflections:0.9.10' ) { transitive = false }
    compile( 'org.apache.commons:commons-lang3:3.4' ) { transitive = false }
    compile( 'commons-beanutils:commons-beanutils:1.9.3' ) { transitive = false }
    compile( 'commons-io:commons-io:2.5' ) { transitive = false }
    compile( 'javax.ws.rs:javax.ws.rs-api:2.0.1' ) { transitive = false }
    compile( 'org.freemarker:freemarker:2.3.26-incubating' ) { transitive = false }

    compile( 'javax.validation:validation-api:1.1.0.Final' ) { transitive = false }
   compile( 'com.opencsv:opencsv:3.7' ) { transitive = false }
    compile( 'org.glassfish.jersey.media:jersey-media-multipart:2.17' ) { transitive = false }
    compile( 'com.google.inject:guice:4.2.0' ) { transitive = false }
    compile( 'com.google.inject.extensions:guice-persist:4.2.0' ) { transitive = false }
    compile( 'com.google.inject.extensions:guice-servlet:4.2.0' ) { transitive = false }
    compile( 'org.glassfish.hk2:guice-bridge:2.4.0-b31' ) { transitive = false }
    compile( 'org.glassfish.hk2:hk2-api:2.4.0-b31' ) { transitive = false }
    compile( 'org.glassfish.hk2:hk2-junitrunner:2.4.0-b31' ) { transitive = false }
    compile( 'io.crnk:crnk-core:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-guice:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-rs:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-cdi:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-jpa:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-security:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-meta:2.5.20180326220647' ) { transitive = false }
    compile( 'io.crnk:crnk-validation:2.5.20180326220647' ) { transitive = false }
    compile( 'io.jsonwebtoken:jjwt:0.9.0' ) { transitive = false }
    
    testCompile( 'junit:junit:4.12' ) { transitive = false }
    testCompile( 'org.hamcrest:hamcrest-all:1.3' ) { transitive = false }
    testCompile( 'org.mockito:mockito-all:1.10.19' ) { transitive = false }
    testCompile( 'com.google.inject:guice:4.2.0' ) { transitive = false }
    testCompile( 'com.google.inject.extensions:guice-persist:4.2.0' ) { transitive = false }
    testCompile( 'com.google.inject.extensions:guice-servlet:4.2.0' ) { transitive = false }
    compile( 'com.google.guava:guava:25.0-jre' ) { transitive = false }

    // Copy of compile dependencies, but with transitive dependencies included.
    //runtime 'org.eclipse.jetty:jetty-server:9.3.0.M2'
    //runtime '__org.eclipse.jetty:jetty-server-deflected:9.3.0.M2'
    //runtime 'org.eclipse.jetty:jetty-util:9.3.0.M2'
    //runtime '__org.eclipse.jetty:jetty-util-deflected:9.3.0.M2'
    //runtime 'org.eclipse.jetty:jetty-servlet:9.3.0.M2'
    runtime 'javax.servlet:javax.servlet-api:3.1.0'
    //runtime '__javax.servlet:javax.servlet-api-deflected:3.1.0'
    runtime 'org.glassfish.jersey.core:jersey-server:2.17'
    runtime 'org.glassfish.jersey.media:jersey-media-json-jackson:2.17'
    runtime 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.17'
    runtime 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    runtime 'com.fasterxml.jackson.core:jackson-core:2.3.2'
    //runtime 'org.apache.derby:derbynet:10.11.1.1'
    //runtime '__org.apache.derby:derbynet-deflected:10.11.1.1'
    runtime 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    runtime 'net.sf.dozer:dozer:5.5.1'
    runtime 'org.slf4j:slf4j-api:1.7.12'
    runtime 'org.reflections:reflections:0.9.10'
    runtime 'org.apache.commons:commons-lang3:3.4'
    runtime 'commons-beanutils:commons-beanutils:1.9.3'
    runtime 'commons-io:commons-io:2.5'
    runtime 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    runtime 'org.freemarker:freemarker:2.3.26-incubating'

    runtime 'javax.validation:validation-api:1.1.0.Final'
    runtime 'com.opencsv:opencsv:3.7'
    runtime 'org.glassfish.jersey.media:jersey-media-multipart:2.17'
    runtime 'com.google.inject:guice:4.2.0'
    runtime 'com.google.inject.extensions:guice-persist:4.2.0'
    runtime 'com.google.inject.extensions:guice-servlet:4.2.0'
    runtime 'org.glassfish.hk2:guice-bridge:2.4.0-b31'
    runtime 'org.glassfish.hk2:hk2-api:2.4.0-b31'
    runtime 'org.glassfish.hk2:hk2-junitrunner:2.4.0-b31'
    runtime 'io.crnk:crnk-core:2.5.20180326220647'
    runtime 'io.crnk:crnk-guice:2.5.20180326220647'
    runtime 'io.crnk:crnk-rs:2.5.20180326220647'
    runtime 'io.crnk:crnk-jpa:2.5.20180326220647'
    runtime 'io.crnk:crnk-security:2.5.20180326220647'
    runtime 'io.crnk:crnk-meta:2.5.20180326220647'
    runtime 'io.crnk:crnk-validation:2.5.20180326220647'
    runtime 'io.jsonwebtoken:jjwt:0.9.0'

    testRuntime 'junit:junit:4.12'
    testRuntime 'org.hamcrest:hamcrest-all:1.3'
    testRuntime 'org.mockito:mockito-all:1.10.19'
    testRuntime 'com.google.inject:guice:4.2.0'
    testRuntime 'com.google.inject.extensions:guice-persist:4.2.0'
    testRuntime 'com.google.inject.extensions:guice-servlet:4.2.0'
    testRuntime 'com.google.guava:guava:25.0-jre'


    runtime 'org.hibernate:hibernate-entitymanager:4.3.10.Final'
    runtime 'org.hibernate:hibernate-validator:5.2.2.Final'
    runtime 'org.glassfish.web:javax.el:2.2.4'
    runtime 'org.slf4j:slf4j-simple:1.7.12'

    // MySQL
    compile('mysql:mysql-connector-java:5.1.36') { transitive = false }
    runtime 'mysql:mysql-connector-java:5.1.36'

    // Java Mail
    providedCompile('javax.mail:mail:1.4.5') { transitive = false }
    compile('javax.activation:activation:1.1.1') { transitive = false }

    runtime 'javax.activation:activation:1.1.1' 
    
    // JSON 
    compile group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.1.4' 
    
    // msgpack
    compile group: 'org.msgpack', name: 'msgpack', version: '0.6.12'
}



mainClassName = 'ch.hslu.wipro.qc.embedded.TomcatStarter'
applicationDefaultJvmArgs = ["-Xshare:off"]
compileJava.options.encoding = 'UTF-8'


// Sources JAR
task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Javadocs JAR
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

eclipse {
    classpath {
        plusConfigurations = [ configurations.compile, configurations.testCompile ]
        downloadSources = true
        downloadJavadoc = true
    }
}

// TODO: need to factor out common build process elements into gradle plugin
// (or something similar) at the framework level.

//mainClassName = 'eu.expact.framework.FrameworkEngine'
/**
// TODO: configure run task to use standard JVM debug port 9009 rather than 5005.
run {
    systemProperty "eu.expact.framework.buildDir", projectDir.getAbsolutePath() + "/build";
    systemProperty "eu.expact.framework.configClassName", "eu.expact.pilot.PilotConfig";

    if ( this.hasProperty( "webProxy" ) )
        systemProperty "eu.expact.framework.webProxy", webProxy;
}
**/


task testDebug(type: Test) {

}


